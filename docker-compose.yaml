version: '3.6'
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
    - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword
  adminer:
    image: adminer
    restart: always
    ports:
      - 8070:8080
  frontapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: front-app-container
    restart: always
    ports:  
      - 3000:3000
    volumes:
      - './:/usr/src/app'
      - '/usr/src/app/node_modules'
      - '/usr/src/app/.next'
  graphql-engine:
    image: hasura/graphql-engine:latest.cli-migrations-v3
    ports:
    - "8080:8080"
    depends_on:
    - "postgres"
    restart: always
    volumes:
      - ./hasura-project/migrations:/hasura-migrations
      - ./hasura-project/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura-migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura-metadata
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      # HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      # PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      # HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
volumes:
  db_data:

